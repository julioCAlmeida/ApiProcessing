version: "3.9"

services:
  db:
    container_name: db
    image: postgres
    networks:
      - apicsharpNET
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
  api:
    container_name: apicsharpNET_api
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: Api/Dockerfile
    networks:
      - apicsharpNET
    ports:
      - 8080:8080
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:8080
      ConnectionStrings__DefaultConnection: ${DB_CONN}
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres-data:

networks:
  apicsharpNET:
    driver: bridge
